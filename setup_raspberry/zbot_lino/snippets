# === check ===
ros2 run micro_ros_agent micro_ros_agent serial --dev /dev/ttyACM0

# === robot bringup ===
ros2 launch linorobot2_bringup bringup.launch.py

# rviz (galactic)
RMW_IMPLEMENTATION=rmw_fastrtps_cpp ros2 launch nav2_bringup rviz_launch.py

<<<----------------------------------------------------------------------->>>

# === slam mapping ===
ros2 launch linorobot2_navigation slam.launch.py

# === save the map ===
ros2 run nav2_map_server map_saver_cli -f mymap # pgm/yaml
ros2 service call /slam_toolbox/serialize_map slam_toolbox/srv/SerializePoseGraph "filename: '$HOME/maps/mymap'" # serialized map for continuous mapping

# === navigation ===
ros2 launch linorobot2_navigation navigation.launch.py \
    map:=$HOME/maps/office_res0.02_0904.yaml

# === defined-route navigation (by keepout filters) ===
# method1
ros2 launch linorobot2_navigation navigation_keepout.launch.py \
    map:=/opt/ros/humble/share/turtlebot3_navigation2/map/map.yaml \
    mask:=$HOME/maps/keepout_mask.yaml

# method2
ros2 launch nav2_costmap_filters_demo costmap_filter_info.launch.py \
    params_file:=$HOME/simulations/src/navigation2_tutorials/nav2_costmap_filters_demo/params/keepout_params.yaml \
    mask:=$HOME/maps/keepout_mask.yaml
ros2 launch linorobot2_navigation navigation.launch.py \
    params_file:=$HOME/simulations/src/zbot_lino/linorobot2/linorobot2_navigation/config/navigation_keepout.yaml \
    map:=/opt/ros/humble/share/turtlebot3_navigation2/map/map.yaml
