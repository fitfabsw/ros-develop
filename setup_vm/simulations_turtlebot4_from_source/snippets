
=== Simulation ===
# Running the simulator with default settings:
ros2 launch turtlebot4_ignition_bringup ignition.launch.py
ros2 launch turtlebot4_ignition_bringup ignition.launch.py model:=lite (lite | standard (default))
ros2 launch turtlebot4_ignition_bringup ignition.launch.py world:=depot (depot (default)| maze | turtlebot4_world)

ros2 launch turtlebot4_ignition_bringup ignition.launch.py world:=shapes x:=2 y:=2

world models are in turtlebot4_ignition_bringup/worlds/
-----
depot.sdf
maze.sdf
turtlebot4_world.sdf


# Running synchronous SLAM with Nav2:
ros2 launch turtlebot4_ignition_bringup ignition.launch.py slam:=sync nav2:=true rviz:=true



=== Robot bringup ===
ros2 launch turtlebot4_bringup lite.launch.py


=== Visualization ===
ros2 launch turtlebot4_viz view_robot.launch.py
ros2 launch turtlebot4_viz view_diagnostics.launch.py


=== SLAM & Nav ===
# run synchronous SLAM on a remote PC to get a higher resolution map
ros2 launch turtlebot4_navigation slam_sync.launch.py
ros2 run slam_toolbox sync_slam_toolbox_node use_sim_time:=false

# Asynchronous SLAM
ros2 launch turtlebot4_navigation slam_async.launch.py

# visualise the map, launch Rviz2
ros2 launch turtlebot4_viz view_robot.launch.py

# save the map
# --- save old map format using nav2 (.pgm, .yaml)
ros2 run nav2_map_server map_saver_cli -f mymap
# --- save new serialized map format (map pose-graph) using slam_toolbox
#     useable for continued mapping, slam_toolbox localization, offline manipulation
ros2 service call /slam_toolbox/serialize_map slam_toolbox/srv/SerializePoseGraph "{filename: 'mymap'}"


=== SLAM/Nav simultaneously ===
ros2 launch turtlebot4_navigation nav_bringup.launch.py slam:=sync


=== leg_detector ===
ros2 launch leg_detector demo_stationary_simple_environment.launch.py


=============================
Tried launch commands
=============================

ros2 launch ros_ign_gazebo ign_gazebo.launch.py ign_args:='shapes.sdf'
IGN_GAZEBO_RESOURCE_PATH='/opt/ros/galactic/share/turtlebot4_ignition_bringup/worlds' ros2 launch ros_ign_gazebo ign_gazebo.launch.py ign_args:='depot.sdf'
ros2 launch turtlebot4_description robot_description.launch.py model:=lite use_sim_time:=true
ros2 run ros_ign_gazebo create -name momo -x 10 -y 10 -z 0 -Y 0 -topic robot_description


